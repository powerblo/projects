{"cmd": "\nfor e in range(epochs):\n    #with torch.autograd.detect_anomaly():\n    posx_md, posy_md, val_md = model((evl_tr-torch.mean(evl_tr))/torch.sqrt(torch.var(evl_tr)))\n    if e == 0:\n        val_init = val_md.clone()\n\n    loss0 = nn.L1Loss()(val_tr, val_md)\n    loss1 = nn.L1Loss()(posx_tr, posx_md) + nn.L1Loss()(posy_tr, posy_md)\n\n    loss = loss0 + loss1*0\n\n    optimiser.zero_grad()\n    loss.backward()\n    optimiser.step()\n\n    #pbar.update()\n    print(loss.item())\n\n", "cmd_opts": " --cell_id=hCHoYCR6v7 -s", "import_complete": 1, "terminal": "nvimterm"}